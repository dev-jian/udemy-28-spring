[XML Config]

- XML 파일로도 Bean을 등록하는 등의 설정을 할 수 있다.

- Spring Container 생성 시 ClassPathXmlApplicationContext로 생성하여야 한다.

- XML 파일에서도 ComponentScan을 설정하여 Bean을 Scan하여 등록할 수 있도록 할 수 있다.
<context:component-scan base-package="me.devjian.learnspringframework.game" />

- 5-1. Annotation Config vs XML Config 

=========================================

[Spring Stereotype Annotations]

- @Component : Generic annotation applicable for any class

- @Component와 같은 기능을 하는 애노테이션들이 있다. 이름이 다른 이유는 세부화 하기 위해서이다.

- @Service : buisness logic을 포함한 class에 붙이는 애노테이션이다.

- @Controller : Controller class에 붙이는 애노테이션이다.

- @Repository : database의 data들을 다루는 기능을 포함한 class에 붙이는 애노테이션이다.

- 따라서 각 세부사항에 어울리는 annotation을 이용해 bean을 등록하면 된다.
- 이렇게 세부사항을 Spring framework에게 알려 AOP 적용할 수도 있다. (ex. Respository가 붙은 Class 에게 JDBC Exception Translation 기능 의존성 주입 등)

- 5-2. Quick Review of Important Spring Annotations

============================================================
[Spring Big picture]

Spring Framework contains multiple spring modules:
fundamental features : Core
Web, Web Reactive, Data Access, Integration, Testing ..

- 이렇게 모듈을 나눈 이유는 요구사항에 맞게 각 모듈을 이용하도록 하기 위함이다.

- 앱 아키텍처가 계속 발전됨에 따라 스프링도 계속 진화해왔다.

- Spring Framework > Spring Security > Spring Data(NoSQL DB가 등장한 후 만들어진 프로젝트 이며 NoSql, Relation DB를 하나의 방법으로 사용할 수 있도록 하기 위한 프로젝트이다.)

- 또한 MSA 방식이 유행하여 이를 빨리 제작할 수 있는 Spring Boot가 인기를 얻게 되었다.

- 5-3. Why Spring Eco System Popular ?

============================================================